/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package grafica;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.font.TextAttribute;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URL;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author Fabri
 */
public class Frm1Linea extends javax.swing.JFrame {

    /**
     * Creates new form FrmOpcionesCargas
     */
    private boolean menuAbierto;
    private boolean menuMoviendose;
    
    public Frm1Linea() {
        initComponents();
        setTitle("PR: Una l√≠nea | Equipo Dinamita");
        URL icono = getClass().getResource("/grafica/img/Logo_Proyecto.png");
        ImageIcon imagenIcono = new ImageIcon(icono);
        this.setIconImage( imagenIcono.getImage());
        this.setResizable(false);
        setLocationRelativeTo(null);
        txtCargaQ1.setBackground(new Color(0,0,0,0));
        txtCargaQ1.setSelectionColor(new Color(0,0,0,0));
        txtDistancia.setBackground(new Color(0,0,0,0));
        txtExponente.setBackground(new Color(0,0,0,0));
        txtLargo.setBackground(new Color(0,0,0,0));
        try {
            URL urlFont = getClass().getResource("/fonts/pristina.ttf");
            String urlFontConverted = urlFont.toString().replaceAll("%20", " ");
            urlFontConverted = urlFontConverted.replaceAll("file:", "");
            urlFontConverted = urlFontConverted.replaceAll("Proyecto_Campo_Electrico.jar!/", "");
            urlFontConverted = urlFontConverted.replaceAll("jar:", "");
            Font pristinaFont = Font.createFont(Font.TRUETYPE_FONT, new File(urlFontConverted)).deriveFont(30f);
            Map<TextAttribute, Object> attributes = new HashMap<>();
            attributes.put(TextAttribute.WEIGHT, TextAttribute.WEIGHT_BOLD);
            pristinaFont = pristinaFont.deriveFont(attributes);
            txtCargaQ1.setFont(pristinaFont);
            txtDistancia.setFont(pristinaFont);
            txtExponente.setFont(pristinaFont);
            txtLargo.setFont(pristinaFont);
        } catch (FontFormatException | IOException ex) {
            System.out.println("No se pudo crear o cargar la font");
        }
        try {
            URL urlFont = getClass().getResource("/fonts/pristina.ttf");
            String urlFontConverted = urlFont.toString().replaceAll("%20", " ");
            urlFontConverted = urlFontConverted.replaceAll("file:", "");
            urlFontConverted = urlFontConverted.replaceAll("Proyecto_Campo_Electrico.jar!/", "");
            urlFontConverted = urlFontConverted.replaceAll("jar:", "");
            Font pristinaFont = Font.createFont(Font.TRUETYPE_FONT, new File(urlFontConverted)).deriveFont(43f);
            Map<TextAttribute, Object> attributes = new HashMap<>();
            attributes.put(TextAttribute.WEIGHT, TextAttribute.WEIGHT_BOLD);
            pristinaFont = pristinaFont.deriveFont(attributes);
            lblCampo.setFont(pristinaFont);
        } catch (FontFormatException | IOException ex) {
            System.out.println("No se pudo crear o cargar la font");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbtnAbrirMenu = new logica.JLabelRotar();
        jPanelMenu = new javax.swing.JPanel();
        lbtnVolverAtras = new javax.swing.JLabel();
        lbtnIrCarga = new javax.swing.JLabel();
        lbtnIrPlacas = new javax.swing.JLabel();
        lbtnIrCreditos = new javax.swing.JLabel();
        lbtnSalir = new javax.swing.JLabel();
        lblMenuFondo = new javax.swing.JLabel();
        txtCargaQ1 = new javax.swing.JTextField();
        txtLargo = new javax.swing.JTextField();
        txtDistancia = new javax.swing.JTextField();
        txtExponente = new javax.swing.JTextField();
        lblCampo = new javax.swing.JLabel();
        lblFondo = new javax.swing.JLabel();
        jPanelPantallaNegra = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbtnAbrirMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafica/img/botonAbrirMenu.png"))); // NOI18N
        lbtnAbrirMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbtnAbrirMenuMouseClicked(evt);
            }
        });
        getContentPane().add(lbtnAbrirMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -2, 60, 60));

        jPanelMenu.setBackground(new java.awt.Color(255, 255, 255));
        jPanelMenu.setFocusable(false);
        jPanelMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbtnVolverAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbtnVolverAtrasMouseClicked(evt);
            }
        });
        jPanelMenu.add(lbtnVolverAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 400, 50));

        lbtnIrCarga.setText("jLabel1");
        lbtnIrCarga.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbtnIrCargaMouseClicked(evt);
            }
        });
        jPanelMenu.add(lbtnIrCarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 400, 50));

        lbtnIrPlacas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbtnIrPlacasMouseClicked(evt);
            }
        });
        jPanelMenu.add(lbtnIrPlacas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 400, 70));

        lbtnIrCreditos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbtnIrCreditosMouseClicked(evt);
            }
        });
        jPanelMenu.add(lbtnIrCreditos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 400, 60));

        lbtnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbtnSalirMouseClicked(evt);
            }
        });
        jPanelMenu.add(lbtnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 400, 60));

        lblMenuFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafica/img/MenuDesplegableLinea.png"))); // NOI18N
        jPanelMenu.add(lblMenuFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 560));

        getContentPane().add(jPanelMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -560, 408, 560));

        txtCargaQ1.setBorder(null);
        txtCargaQ1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCargaQ1KeyReleased(evt);
            }
        });
        getContentPane().add(txtCargaQ1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 40, 130, 40));

        txtLargo.setBorder(null);
        txtLargo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLargoKeyReleased(evt);
            }
        });
        getContentPane().add(txtLargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 100, 140, 40));

        txtDistancia.setBorder(null);
        txtDistancia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDistanciaKeyReleased(evt);
            }
        });
        getContentPane().add(txtDistancia, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 150, 140, 40));

        txtExponente.setBorder(null);
        txtExponente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtExponenteKeyReleased(evt);
            }
        });
        getContentPane().add(txtExponente, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 12, 40, 40));
        getContentPane().add(lblCampo, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 370, 170, 50));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafica/img/1LineaSeleccion.png"))); // NOI18N
        getContentPane().add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 560));

        jPanelPantallaNegra.setOpaque(false);

        javax.swing.GroupLayout jPanelPantallaNegraLayout = new javax.swing.GroupLayout(jPanelPantallaNegra);
        jPanelPantallaNegra.setLayout(jPanelPantallaNegraLayout);
        jPanelPantallaNegraLayout.setHorizontalGroup(
            jPanelPantallaNegraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanelPantallaNegraLayout.setVerticalGroup(
            jPanelPantallaNegraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelPantallaNegra, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    boolean esNumero(String text){
        try{
            Double.valueOf(text);
            return true;
        }catch(NumberFormatException e){
            return false;
        }
    }
    
    void actualizarCampo(){
        if(esNumero(txtCargaQ1.getText())){
            double cargaQ1 = Double.parseDouble(txtCargaQ1.getText());
            if(esNumero(txtExponente.getText())){
                double exponente = Double.parseDouble(txtExponente.getText());
                double cargaCompleta = cargaQ1 * Math.pow(10, exponente);
                if(esNumero(txtDistancia.getText())){
                    double distancia = Double.parseDouble(txtDistancia.getText());
                    if(distancia > 0){
                        if(esNumero(txtLargo.getText())){
                            double largo = Double.parseDouble(txtLargo.getText());
                            if(largo > 0){
                                txtDistancia.setBackground(new Color(0,0,0,0));
                                txtLargo.setBackground(new Color(0,0,0,0));
                                double lambda = cargaCompleta / largo;
                                double pi = 3.14;
                                double e0 = 8.8e-12;
                                double campoResultante = Math.abs(lambda / (2 * pi * e0 * distancia));
                                DecimalFormat f = new DecimalFormat("0.##E0");
                                lblCampo.setText(String.valueOf(f.format(campoResultante)));
                            }
                        }
                    }else{
                        txtDistancia.setBackground(new Color(100,0,0,100));
                        lblCampo.setText(null);
                    }   
                }  
            }
            
            if(cargaQ1 > 0){
                ImageIcon icon = new ImageIcon(FrmMenu.class.getResource("/grafica/img/1LineaSeleccionPos.png"));
                lblFondo.setIcon(icon);
                return;
            }
            if(cargaQ1 < 0){
                ImageIcon icon = new ImageIcon(FrmMenu.class.getResource("/grafica/img/1LineaSeleccionNeg.png"));
                lblFondo.setIcon(icon);
                return;
            }
            ImageIcon icon = new ImageIcon(FrmMenu.class.getResource("/grafica/img/1LineaSeleccion.png"));
            lblCampo.setText(null);
            lblFondo.setIcon(icon);
        }
    }
    
    private void txtCargaQ1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCargaQ1KeyReleased
        if(esNumero(txtCargaQ1.getText())){
            actualizarCampo();
            txtCargaQ1.setBackground(new Color(0,0,0,0));
            return;
        }
        if(txtCargaQ1.getText().equals("")){
            lblCampo.setText(null);
            txtCargaQ1.setBackground(new Color(0,0,0,0));
            ImageIcon icon = new ImageIcon(FrmMenu.class.getResource("/grafica/img/1LineaSeleccion.png"));
            lblFondo.setIcon(icon);
            return;
        }
        txtCargaQ1.setBackground(new Color(100,0,0,100));
        ImageIcon icon = new ImageIcon(FrmMenu.class.getResource("/grafica/img/1LineaSeleccion.png"));
        lblFondo.setIcon(icon);
        lblCampo.setText(null);
    }//GEN-LAST:event_txtCargaQ1KeyReleased

    private void txtDistanciaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDistanciaKeyReleased
        if(esNumero(txtDistancia.getText())){
            double distancia = Double.parseDouble(txtDistancia.getText());
            if(distancia > 0){
                actualizarCampo();
                txtDistancia.setBackground(new Color(0,0,0,0));
                return;
            }else{
                txtDistancia.setBackground(new Color(100,0,0,100));
                lblCampo.setText(null);
                return;
            }
        }
        if(txtDistancia.getText().equals("")){
            lblCampo.setText(null);
            txtDistancia.setBackground(new Color(0,0,0,0));
            return;
        }
        txtDistancia.setBackground(new Color(100,0,0,100));
        lblCampo.setText(null);
    }//GEN-LAST:event_txtDistanciaKeyReleased

    private void txtExponenteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtExponenteKeyReleased
        if(txtExponente.getText().equals("")){
            txtExponente.setBackground(new Color(0,0,0,0));
            lblCampo.setText(null);
            return;
        }
        if(esNumero(txtExponente.getText())){
            double exponente = Double.parseDouble(txtExponente.getText());
            if(exponente >= -12 && exponente <= 12){
                actualizarCampo();
                txtExponente.setBackground(new Color(0,0,0,0));
                return;
            }
        }
        txtExponente.setBackground(new Color(100,0,0,100));
        lblCampo.setText(null);
    }//GEN-LAST:event_txtExponenteKeyReleased

    private void txtLargoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLargoKeyReleased
        if(esNumero(txtLargo.getText())){
            double distancia = Double.parseDouble(txtLargo.getText());
            if(distancia > 0){
                actualizarCampo();
                txtLargo.setBackground(new Color(0,0,0,0));
                return;
            }else{
                txtLargo.setBackground(new Color(100,0,0,100));
                lblCampo.setText(null);
                return;
            }
        }
        if(txtLargo.getText().equals("")){
            lblCampo.setText(null);
            txtLargo.setBackground(new Color(0,0,0,0));
            return;
        }
        txtLargo.setBackground(new Color(100,0,0,100));
        lblCampo.setText(null);
    }//GEN-LAST:event_txtLargoKeyReleased

    private void mostrarMenu(){
        Timer cronometro = new Timer();
        TimerTask mostrarMenuTimer = new TimerTask(){
            @Override
            public void run() {
                if(jPanelMenu.getY() < 0){
                    if(lbtnAbrirMenu.getRotation() < 7.83){
                        lbtnAbrirMenu.setRotation(lbtnAbrirMenu.getRotation() + 0.15);
                    }else{
                        lbtnAbrirMenu.setRotation(7.83);
                    }
                    menuMoviendose = true;
                    int nuevaY = jPanelMenu.getY() + 8;
                    jPanelMenu.setLocation(0, nuevaY);
                }else{
                    menuMoviendose = false;
                    cancel();
                }
            }   
        };
        cronometro.scheduleAtFixedRate(mostrarMenuTimer, 0, 5);
    }
    
    private void ocultarMenu(){
        Timer cronometro = new Timer();
        TimerTask mostrarMenuTimer = new TimerTask(){
            @Override
            public void run() {
                if(lbtnAbrirMenu.getRotation() > 0){
                        lbtnAbrirMenu.setRotation(lbtnAbrirMenu.getRotation() - 0.15);
                }else{
                        lbtnAbrirMenu.setRotation(0);
                }
                if(jPanelMenu.getY() > -jPanelMenu.getHeight()){
                    menuMoviendose = true;
                    int nuevaY = jPanelMenu.getY() - 8;
                    jPanelMenu.setLocation(0, nuevaY);
                }else{
                    menuMoviendose = false;
                    cancel();
                }
            }   
        };
        cronometro.scheduleAtFixedRate(mostrarMenuTimer, 0, 8);
    }
    
    private void lbtnAbrirMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbtnAbrirMenuMouseClicked
        if(!menuMoviendose){
            if(menuAbierto){
                menuAbierto = false;
                ocultarMenu();
            }else{
                menuAbierto = true;
                mostrarMenu();
            }
        }
    }//GEN-LAST:event_lbtnAbrirMenuMouseClicked

    private void lbtnVolverAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbtnVolverAtrasMouseClicked
        setVisible(false);
        new FrmMenu().setVisible(true);
    }//GEN-LAST:event_lbtnVolverAtrasMouseClicked

    private void lbtnIrPlacasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbtnIrPlacasMouseClicked
        setVisible(false);
        new FrmOpcionesPlacas().setVisible(true);
    }//GEN-LAST:event_lbtnIrPlacasMouseClicked

    private void lbtnIrCreditosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbtnIrCreditosMouseClicked
        setVisible(false);
        new FrmCreditos().setVisible(true);
    }//GEN-LAST:event_lbtnIrCreditosMouseClicked

    private void lbtnSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbtnSalirMouseClicked
        jPanelPantallaNegra.setOpaque(true);
        jPanelPantallaNegra.setBackground(new Color(0,0,0,0));
        Timer cronometro = new Timer();
        TimerTask ajustarOpacidad = new TimerTask(){
            @Override
            public void run() {
                if(jPanelPantallaNegra.getBackground().getAlpha() < 50){
                    jPanelPantallaNegra.setBackground(new Color(0,0,0,jPanelPantallaNegra.getBackground().getAlpha() + 1));
                }else{
                    System.exit(0);
                    cancel();
                }
            }
        };
        cronometro.scheduleAtFixedRate(ajustarOpacidad, 0, 50);
    }//GEN-LAST:event_lbtnSalirMouseClicked

    private void lbtnIrCargaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbtnIrCargaMouseClicked
        setVisible(false);
        new FrmOpcionesCargas().setVisible(true);
    }//GEN-LAST:event_lbtnIrCargaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm1Linea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm1Linea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm1Linea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm1Linea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm1Linea().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanelMenu;
    private javax.swing.JPanel jPanelPantallaNegra;
    private javax.swing.JLabel lblCampo;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblMenuFondo;
    private logica.JLabelRotar lbtnAbrirMenu;
    private javax.swing.JLabel lbtnIrCarga;
    private javax.swing.JLabel lbtnIrCreditos;
    private javax.swing.JLabel lbtnIrPlacas;
    private javax.swing.JLabel lbtnSalir;
    private javax.swing.JLabel lbtnVolverAtras;
    private javax.swing.JTextField txtCargaQ1;
    private javax.swing.JTextField txtDistancia;
    private javax.swing.JTextField txtExponente;
    private javax.swing.JTextField txtLargo;
    // End of variables declaration//GEN-END:variables
}
