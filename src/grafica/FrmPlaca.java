package grafica;

import java.awt.Color;
import java.net.URL;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import logica.Placa;
import logica.Placas;

public class FrmPlaca extends javax.swing.JFrame {

    public static Placas placas;
    private boolean menuAbierto;
    private boolean menuMoviendose;
    
    /**
     * Creates new form NewJFrame
     */
    public FrmPlaca() {
        initComponents();
        miInicializador();
    }

    private Icon iconoRedimensionado(String url, JLabel lbl) {
        ImageIcon imagen = new ImageIcon(getClass().getResource(url));
        Icon icono = new ImageIcon(imagen.getImage().getScaledInstance(lbl.getWidth(), lbl.getHeight(), 1));
        return icono;
    }

    private void miInicializador() {
        menuAbierto = false;
        menuMoviendose = false;
        setTitle("PR: Placas | Equipo Dinamita");
        setLocationRelativeTo(null);
        URL icono = getClass().getResource("/grafica/img/Logo_Proyecto.png");
        ImageIcon imagenIcono = new ImageIcon(icono);
        this.setIconImage( imagenIcono.getImage());
        setResizable(false);
        this.rbnConMovimiento.setEnabled(false);
        this.rbnSinMovimiento.setEnabled(false);
        placas = new Placas();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lbtnAbrirMenu = new logica.JLabelRotar();
        jPanelMenu = new javax.swing.JPanel();
        lbtnVolverAtras = new javax.swing.JLabel();
        lbtnIrCargas = new javax.swing.JLabel();
        lbtnIrCreditos = new javax.swing.JLabel();
        lbtnSalir = new javax.swing.JLabel();
        lblMenuFondo = new javax.swing.JLabel();
        txtSigma = new javax.swing.JTextField();
        txtExp = new javax.swing.JTextField();
        lblPlaca = new javax.swing.JLabel();
        lblBtnAgregar = new javax.swing.JLabel();
        lblTips = new javax.swing.JLabel();
        lblBtnRepresentar = new javax.swing.JLabel();
        rbnSinMovimiento = new javax.swing.JRadioButton();
        rbnConMovimiento = new javax.swing.JRadioButton();
        lblFondoMenu = new javax.swing.JLabel();
        jPanelPantallaNegra = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 560));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbtnAbrirMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafica/img/botonAbrirMenu.png"))); // NOI18N
        lbtnAbrirMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbtnAbrirMenuMouseClicked(evt);
            }
        });
        getContentPane().add(lbtnAbrirMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -2, 60, 60));

        jPanelMenu.setBackground(new java.awt.Color(255, 255, 255));
        jPanelMenu.setFocusable(false);
        jPanelMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbtnVolverAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbtnVolverAtrasMouseClicked(evt);
            }
        });
        jPanelMenu.add(lbtnVolverAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 400, 50));

        lbtnIrCargas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbtnIrCargasMouseClicked(evt);
            }
        });
        jPanelMenu.add(lbtnIrCargas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 400, 60));

        lbtnIrCreditos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbtnIrCreditosMouseClicked(evt);
            }
        });
        jPanelMenu.add(lbtnIrCreditos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 400, 60));

        lbtnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbtnSalirMouseClicked(evt);
            }
        });
        jPanelMenu.add(lbtnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 400, 60));

        lblMenuFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafica/img/menuDeslizablePlaca.png"))); // NOI18N
        jPanelMenu.add(lblMenuFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 560));

        getContentPane().add(jPanelMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -560, 408, 560));

        txtSigma.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtSigma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSigmaActionPerformed(evt);
            }
        });
        txtSigma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSigmaKeyReleased(evt);
            }
        });
        getContentPane().add(txtSigma, new org.netbeans.lib.awtextra.AbsoluteConstraints(186, 312, 36, 31));

        txtExp.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtExp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExpActionPerformed(evt);
            }
        });
        txtExp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtExpKeyReleased(evt);
            }
        });
        getContentPane().add(txtExp, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 311, 36, 31));
        getContentPane().add(lblPlaca, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 250, 60, 140));

        lblBtnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblBtnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBtnAgregarMouseClicked(evt);
            }
        });
        getContentPane().add(lblBtnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 380, 100, 30));

        lblTips.setFont(new java.awt.Font("Dyuthi", 3, 24)); // NOI18N
        lblTips.setForeground(new java.awt.Color(102, 102, 255));
        lblTips.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTips.setText("TIP: Primero escribe los valores de la placa");
        getContentPane().add(lblTips, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, 1000, -1));

        lblBtnRepresentar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblBtnRepresentar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBtnRepresentarMouseClicked(evt);
            }
        });
        getContentPane().add(lblBtnRepresentar, new org.netbeans.lib.awtextra.AbsoluteConstraints(673, 377, 60, 60));

        buttonGroup1.add(rbnSinMovimiento);
        rbnSinMovimiento.setEnabled(false);
        rbnSinMovimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnSinMovimientoActionPerformed(evt);
            }
        });
        getContentPane().add(rbnSinMovimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(612, 336, -1, -1));

        buttonGroup1.add(rbnConMovimiento);
        rbnConMovimiento.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbnConMovimiento.setEnabled(false);
        rbnConMovimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnConMovimientoActionPerformed(evt);
            }
        });
        getContentPane().add(rbnConMovimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(612, 287, -1, -1));

        lblFondoMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grafica/img/placas fondo nuevo.png"))); // NOI18N
        getContentPane().add(lblFondoMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 560));

        jPanelPantallaNegra.setOpaque(false);

        javax.swing.GroupLayout jPanelPantallaNegraLayout = new javax.swing.GroupLayout(jPanelPantallaNegra);
        jPanelPantallaNegra.setLayout(jPanelPantallaNegraLayout);
        jPanelPantallaNegraLayout.setHorizontalGroup(
            jPanelPantallaNegraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanelPantallaNegraLayout.setVerticalGroup(
            jPanelPantallaNegraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelPantallaNegra, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSigmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSigmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSigmaActionPerformed

    private void txtExpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExpActionPerformed

    private void rbnConMovimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnConMovimientoActionPerformed
        lblBtnRepresentar.setEnabled(true);
        lblTips.setText("¡Listo! Finalmente dale a START para visualizarlas.");
        lblTips.setForeground(Color.GREEN);
    }//GEN-LAST:event_rbnConMovimientoActionPerformed

    private void rbnSinMovimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnSinMovimientoActionPerformed
        lblBtnRepresentar.setEnabled(true);
        lblTips.setText("¡Listo! Finalmente dale a START para visualizarlas.");
        lblTips.setForeground(Color.GREEN);
    }//GEN-LAST:event_rbnSinMovimientoActionPerformed

    private void lblBtnAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBtnAgregarMouseClicked
        try {
            String url;
            double sigma = Double.parseDouble(this.txtSigma.getText());
            sigma *= Math.pow(10.0D, Integer.parseInt(this.txtExp.getText()));
            placas.agregar(new Placa(sigma));
            this.rbnConMovimiento.setEnabled(true);
            this.rbnSinMovimiento.setEnabled(true);
            this.txtSigma.setText((String) null);
            this.txtExp.setText((String) null);

            if (sigma > 0.0D) {
                url = "img/PlacaPos.png";
            } else if (sigma < 0.0D) {
                url = "img/PlacaNeg.png";
            } else {

                url = "img/PlacaNeutra.png";
            }
            this.lblPlaca.setIcon(iconoRedimensionado(url, this.lblPlaca));
            lblTips.setForeground(new Color(102,102,255));
            lblTips.setText("¡Muy bien! Continúa agregando placas o selecciona CON o SIN movimiento.");
        } catch (Exception ex) {
            lblTips.setForeground(Color.RED);
            lblTips.setText("¡Debes ingresar el valor de la placa primero!");
        }
    }//GEN-LAST:event_lblBtnAgregarMouseClicked

    private void lblBtnRepresentarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBtnRepresentarMouseClicked
        if (placas.tamano() > 0) {
            if(rbnConMovimiento.isSelected() || rbnSinMovimiento.isSelected()){
                dispose();
                if (this.rbnConMovimiento.isSelected()) {
                    (new FrmPlacasConMov()).setVisible(true);
                } else {

                    (new PlacasSinMov()).setVisible(true);
                }
            }
        } else {
            lblTips.setText("¡Ingresa al menos una placa!");
            lblTips.setForeground(Color.RED);
        }
    }//GEN-LAST:event_lblBtnRepresentarMouseClicked

    private void txtSigmaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSigmaKeyReleased
        if(!txtExp.getText().equals("") && !txtSigma.getText().equals("")){
            lblTips.setForeground(new Color(102,102,255));
            lblTips.setText("¡Bien hecho! Ahora dale a agregar.");
        }
    }//GEN-LAST:event_txtSigmaKeyReleased

    private void txtExpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtExpKeyReleased
                if(!txtExp.getText().equals("") && !txtSigma.getText().equals("")){
                    lblTips.setForeground(new Color(102,102,255));
                    lblTips.setText("¡Bien hecho! Ahora dale a agregar.");
        }
    }//GEN-LAST:event_txtExpKeyReleased

    private void lbtnAbrirMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbtnAbrirMenuMouseClicked
        if(!menuMoviendose){
            if(menuAbierto){
                menuAbierto = false;
                ocultarMenu();
            }else{
                menuAbierto = true;
                mostrarMenu();
            }
        }
    }//GEN-LAST:event_lbtnAbrirMenuMouseClicked

    private void mostrarMenu(){
        Timer cronometro = new Timer();
        TimerTask mostrarMenuTimer = new TimerTask(){
            @Override
            public void run() {
                if(jPanelMenu.getY() < 0){
                    if(lbtnAbrirMenu.getRotation() < 7.83){
                        lbtnAbrirMenu.setRotation(lbtnAbrirMenu.getRotation() + 0.15);
                    }else{
                        lbtnAbrirMenu.setRotation(7.83);
                    }
                    menuMoviendose = true;
                    int nuevaY = jPanelMenu.getY() + 8;
                    jPanelMenu.setLocation(0, nuevaY);
                }else{
                    menuMoviendose = false;
                    cancel();
                }
            }   
        };
        cronometro.scheduleAtFixedRate(mostrarMenuTimer, 0, 5);
    }
    
    private void ocultarMenu(){
        Timer cronometro = new Timer();
        TimerTask mostrarMenuTimer = new TimerTask(){
            @Override
            public void run() {
                if(lbtnAbrirMenu.getRotation() > 0){
                        lbtnAbrirMenu.setRotation(lbtnAbrirMenu.getRotation() - 0.15);
                }else{
                        lbtnAbrirMenu.setRotation(0);
                }
                if(jPanelMenu.getY() > -jPanelMenu.getHeight()){
                    menuMoviendose = true;
                    int nuevaY = jPanelMenu.getY() - 8;
                    jPanelMenu.setLocation(0, nuevaY);
                }else{
                    menuMoviendose = false;
                    cancel();
                }
            }   
        };
        cronometro.scheduleAtFixedRate(mostrarMenuTimer, 0, 8);
    }
    
    private void lbtnVolverAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbtnVolverAtrasMouseClicked
        setVisible(false);
        new FrmMenu().setVisible(true);
    }//GEN-LAST:event_lbtnVolverAtrasMouseClicked

    private void lbtnIrCargasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbtnIrCargasMouseClicked
        setVisible(false);
        new FrmCargas().setVisible(true);
    }//GEN-LAST:event_lbtnIrCargasMouseClicked

    private void lbtnIrCreditosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbtnIrCreditosMouseClicked
        setVisible(false);
        new FrmCreditos().setVisible(true);
    }//GEN-LAST:event_lbtnIrCreditosMouseClicked

    private void lbtnSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbtnSalirMouseClicked
        jPanelPantallaNegra.setOpaque(true);
        jPanelPantallaNegra.setBackground(new Color(0,0,0,0));
        Timer cronometro = new Timer();
        TimerTask ajustarOpacidad = new TimerTask(){
            @Override
            public void run() {
                if(jPanelPantallaNegra.getBackground().getAlpha() < 50){
                    jPanelPantallaNegra.setBackground(new Color(0,0,0,jPanelPantallaNegra.getBackground().getAlpha() + 1));
                }else{
                    System.exit(0);
                    cancel();
                }
            }
        };
        cronometro.scheduleAtFixedRate(ajustarOpacidad, 0, 50);
    }//GEN-LAST:event_lbtnSalirMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPlaca.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPlaca.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPlaca.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPlaca.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPlaca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanelMenu;
    private javax.swing.JPanel jPanelPantallaNegra;
    private javax.swing.JLabel lblBtnAgregar;
    private javax.swing.JLabel lblBtnRepresentar;
    private javax.swing.JLabel lblFondoMenu;
    private javax.swing.JLabel lblMenuFondo;
    private javax.swing.JLabel lblPlaca;
    private javax.swing.JLabel lblTips;
    private logica.JLabelRotar lbtnAbrirMenu;
    private javax.swing.JLabel lbtnIrCargas;
    private javax.swing.JLabel lbtnIrCreditos;
    private javax.swing.JLabel lbtnSalir;
    private javax.swing.JLabel lbtnVolverAtras;
    private javax.swing.JRadioButton rbnConMovimiento;
    private javax.swing.JRadioButton rbnSinMovimiento;
    private javax.swing.JTextField txtExp;
    private javax.swing.JTextField txtSigma;
    // End of variables declaration//GEN-END:variables
}
